# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.equipped import Equipped  # noqa: F401,E501
from swagger_server.models.item import Item  # noqa: F401,E501
from swagger_server import util


class Inventory(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, items: List[Item]=None, equipment: List[Equipped]=None, key_items: List[Item]=None):  # noqa: E501
        """Inventory - a model defined in Swagger

        :param items: The items of this Inventory.  # noqa: E501
        :type items: List[Item]
        :param equipment: The equipment of this Inventory.  # noqa: E501
        :type equipment: List[Equipped]
        :param key_items: The key_items of this Inventory.  # noqa: E501
        :type key_items: List[Item]
        """
        self.swagger_types = {
            'items': List[Item],
            'equipment': List[Equipped],
            'key_items': List[Item]
        }

        self.attribute_map = {
            'items': 'items',
            'equipment': 'equipment',
            'key_items': 'keyItems'
        }
        self._items = items
        self._equipment = equipment
        self._key_items = key_items

    @classmethod
    def from_dict(cls, dikt) -> 'Inventory':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Inventory of this Inventory.  # noqa: E501
        :rtype: Inventory
        """
        return util.deserialize_model(dikt, cls)

    @property
    def items(self) -> List[Item]:
        """Gets the items of this Inventory.


        :return: The items of this Inventory.
        :rtype: List[Item]
        """
        return self._items

    @items.setter
    def items(self, items: List[Item]):
        """Sets the items of this Inventory.


        :param items: The items of this Inventory.
        :type items: List[Item]
        """

        self._items = items

    @property
    def equipment(self) -> List[Equipped]:
        """Gets the equipment of this Inventory.


        :return: The equipment of this Inventory.
        :rtype: List[Equipped]
        """
        return self._equipment

    @equipment.setter
    def equipment(self, equipment: List[Equipped]):
        """Sets the equipment of this Inventory.


        :param equipment: The equipment of this Inventory.
        :type equipment: List[Equipped]
        """

        self._equipment = equipment

    @property
    def key_items(self) -> List[Item]:
        """Gets the key_items of this Inventory.


        :return: The key_items of this Inventory.
        :rtype: List[Item]
        """
        return self._key_items

    @key_items.setter
    def key_items(self, key_items: List[Item]):
        """Sets the key_items of this Inventory.


        :param key_items: The key_items of this Inventory.
        :type key_items: List[Item]
        """

        self._key_items = key_items
